<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="model" default="$(find two_kinect_description)/robots/multi_kinectv2.urdf.xacro"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	<arg name="world_name" value="$(find two_kinect_gazebo)/worlds/multi_kinectv2.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(arg model)'" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model kinect2 -param robot_description"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
  	respawn="false" output="screen">
  </node>

  <node name="coke_can_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-database coke_can -gazebo -model coke_can -x 1 -y 0 -z 0"/>

</launch>
